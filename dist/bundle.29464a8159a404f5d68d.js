(()=>{"use strict";var n={28:(n,t,e)=>{e.d(t,{Z:()=>g});var o=e(537),a=e.n(o),r=e(645),i=e.n(r),A=e(667),c=e.n(A),s=new URL(e(42),e.b),l=new URL(e(662),e.b),d=i()(a());d.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Anton&family=Corben&family=Dosis:wght@600&family=Open+Sans:wght@500&family=Poppins&family=Roboto&display=swap);"]);var u=c()(s),C=c()(l);d.push([n.id,"* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: 'Poppins', sans-serif;\n    text-align: center;\n }\n :root {\n    --color1: rgb(80,50,70);\n }\nbody {\n    background-color: rgb(64,64,64);\n    margin:0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    \n}\n@media (max-width: 800px) {\nbody {\n    flex-direction: column;\n}\n}\n.container {\n    display: grid; \n    grid-template-columns: repeat(8,calc(min(100vh, 100vw) / 8));\n    grid-template-rows: repeat(8, calc(min(100vh, 100vw) / 8));\n}\n.black {\n    background-color: rgb(80, 80, 80);\n}\n.white {\n    background-color: rgb(206, 206, 206);\n}\n.cell {\n    position:relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    font-size: 2em;\n}\n.startPos {\n    cursor: url("+u+"), auto;\n}\n.cellbg:hover {\n    background: url("+u+");\n    background-size: contain;\n}\n.knight {\n    background: url("+u+");\n    background-size: contain;\n    padding:5px;\n}\n.destination:hover {\n    background: url("+C+");\n    background-size: contain;\n}\n.destinationFinal {\n    background: url("+C+");\n    background-size: contain;\n}\n.leftPane {\n    display: flex;\n    justify-content: stretch;\n    align-items: center;\n    flex-direction: column;\n    min-height: 100vh;\n    width:100%;\n}\n.title {\n    font-size: 4em;\n    font-family: 'Anton', sans-serif;\n    color:var(--color1);\n    background-color: darkgray;\n    padding: 20px 50px;\n    margin-bottom: 50px;\n}\n.explanation {\n    font-size: 1.5em;\n    text-align: center;\n    margin-bottom: 50px;\n    background-color: darkgray;\n    padding: 5px;\n}\n.buttons button {\n    margin: 15px;\n    font-size: 1.5em;\n    padding: 5px 10px;\n}\n.active:hover {\n    border: 2px solid var(--color1);\n    background-color: var(--color1);\n    color:white;\n}\n.inactive {\n    background-color: darkgray;\n    border: 2px solid darkgray;\n    color: rgb(99, 99, 99);\n}\n.inactive:hover {\n    background-color: darkgray;\n    border: 2px solid darkgray;\n    color: rgb(99, 99, 99);\n}\n.calculate {\n    transition: all 0.4s ease;\n}   \n.guide {\n    background-color: var(--color1);\n    min-height: 200px;\n    width:100%;\n    text-align: center;\n    padding: 15px;\n    color: white;\n    font-size: 1.25em;\n    margin: 20px 0;\n}\n/* ------- start hint effect -------- */\n@-webkit-keyframes hint{\n    to {\n      -webkit-transform: scale(1.2);\n      transform: scale(1.2);\n    }}\n@keyframes hint{\nto {\n    -webkit-transform: scale(1.2);\n    transform: scale(1.2);\n}}\n.hint{\n-webkit-animation-name: hint;\nanimation-name: hint;\n-webkit-animation-duration: 0.3s;\nanimation-duration: 0.5s;\n-webkit-animation-timing-function: linear;\nanimation-timing-function: linear;\n-webkit-animation-iteration-count: 4;\nanimation-iteration-count: 4;\n-webkit-animation-direction: alternate;\nanimation-direction: alternate;\n}\n/* ------- end hint effect -------- */\n.imgKnight {\n    position: absolute;\n    transition: all 0.3s ease-in-out;\n    z-index: 1;\n}\n.startPos {\n    border: 4px solid black;\n}\n.temp {\n    border: 4px solid rgb(0, 87, 128);\n}\n.tempLast {\n    border: 4px solid green;\n}\n.highlight {\n    background-color: cyan;\n}\n.target {\n    background-color: green;\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AACC;IACG,SAAS;IACT,UAAU;IACV,sBAAsB;IACtB,kCAAkC;IAClC,kBAAkB;CACrB;CACA;IACG,uBAAuB;CAC1B;AACD;IACI,+BAA+B;IAC/B,QAAQ;IACR,aAAa;IACb,uBAAuB;IACvB,mBAAmB;;AAEvB;AACA;AACA;IACI,sBAAsB;AAC1B;AACA;AACA;IACI,aAAa;IACb,4DAA4D;IAC5D,0DAA0D;AAC9D;AACA;IACI,iCAAiC;AACrC;AACA;IACI,oCAAoC;AACxC;AACA;IACI,iBAAiB;IACjB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,kBAAkB;IAClB,cAAc;AAClB;AACA;IACI,qDAAoC;AACxC;AACA;IACI,mDAAkC;IAClC,wBAAwB;AAC5B;AACA;IACI,mDAAkC;IAClC,wBAAwB;IACxB,WAAW;AACf;AACA;IACI,mDAAuC;IACvC,wBAAwB;AAC5B;AACA;IACI,mDAAuC;IACvC,wBAAwB;AAC5B;AACA;IACI,aAAa;IACb,wBAAwB;IACxB,mBAAmB;IACnB,sBAAsB;IACtB,iBAAiB;IACjB,UAAU;AACd;AACA;IACI,cAAc;IACd,gCAAgC;IAChC,mBAAmB;IACnB,0BAA0B;IAC1B,kBAAkB;IAClB,mBAAmB;AACvB;AACA;IACI,gBAAgB;IAChB,kBAAkB;IAClB,mBAAmB;IACnB,0BAA0B;IAC1B,YAAY;AAChB;AACA;IACI,YAAY;IACZ,gBAAgB;IAChB,iBAAiB;AACrB;AACA;IACI,+BAA+B;IAC/B,+BAA+B;IAC/B,WAAW;AACf;AACA;IACI,0BAA0B;IAC1B,0BAA0B;IAC1B,sBAAsB;AAC1B;AACA;IACI,0BAA0B;IAC1B,0BAA0B;IAC1B,sBAAsB;AAC1B;AACA;IACI,yBAAyB;AAC7B;AACA;IACI,+BAA+B;IAC/B,iBAAiB;IACjB,UAAU;IACV,kBAAkB;IAClB,aAAa;IACb,YAAY;IACZ,iBAAiB;IACjB,cAAc;AAClB;AACA,uCAAuC;AACvC;IACI;MACE,6BAA6B;MAC7B,qBAAqB;IACvB,CAAC;AACL;AACA;IACI,6BAA6B;IAC7B,qBAAqB;AACzB,CAAC;AACD;AACA,4BAA4B;AAC5B,oBAAoB;AACpB,gCAAgC;AAChC,wBAAwB;AACxB,yCAAyC;AACzC,iCAAiC;AACjC,oCAAoC;AACpC,4BAA4B;AAC5B,sCAAsC;AACtC,8BAA8B;AAC9B;AACA,qCAAqC;AACrC;IACI,kBAAkB;IAClB,gCAAgC;IAChC,UAAU;AACd;AACA;IACI,uBAAuB;AAC3B;AACA;IACI,iCAAiC;AACrC;AACA;IACI,uBAAuB;AAC3B;AACA;IACI,sBAAsB;AAC1B;AACA;IACI,uBAAuB;AAC3B",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Anton&family=Corben&family=Dosis:wght@600&family=Open+Sans:wght@500&family=Poppins&family=Roboto&display=swap');\n * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: 'Poppins', sans-serif;\n    text-align: center;\n }\n :root {\n    --color1: rgb(80,50,70);\n }\nbody {\n    background-color: rgb(64,64,64);\n    margin:0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    \n}\n@media (max-width: 800px) {\nbody {\n    flex-direction: column;\n}\n}\n.container {\n    display: grid; \n    grid-template-columns: repeat(8,calc(min(100vh, 100vw) / 8));\n    grid-template-rows: repeat(8, calc(min(100vh, 100vw) / 8));\n}\n.black {\n    background-color: rgb(80, 80, 80);\n}\n.white {\n    background-color: rgb(206, 206, 206);\n}\n.cell {\n    position:relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    font-size: 2em;\n}\n.startPos {\n    cursor: url(assets/knight.png), auto;\n}\n.cellbg:hover {\n    background: url(assets/knight.png);\n    background-size: contain;\n}\n.knight {\n    background: url(assets/knight.png);\n    background-size: contain;\n    padding:5px;\n}\n.destination:hover {\n    background: url(assets/destination.png);\n    background-size: contain;\n}\n.destinationFinal {\n    background: url(assets/destination.png);\n    background-size: contain;\n}\n.leftPane {\n    display: flex;\n    justify-content: stretch;\n    align-items: center;\n    flex-direction: column;\n    min-height: 100vh;\n    width:100%;\n}\n.title {\n    font-size: 4em;\n    font-family: 'Anton', sans-serif;\n    color:var(--color1);\n    background-color: darkgray;\n    padding: 20px 50px;\n    margin-bottom: 50px;\n}\n.explanation {\n    font-size: 1.5em;\n    text-align: center;\n    margin-bottom: 50px;\n    background-color: darkgray;\n    padding: 5px;\n}\n.buttons button {\n    margin: 15px;\n    font-size: 1.5em;\n    padding: 5px 10px;\n}\n.active:hover {\n    border: 2px solid var(--color1);\n    background-color: var(--color1);\n    color:white;\n}\n.inactive {\n    background-color: darkgray;\n    border: 2px solid darkgray;\n    color: rgb(99, 99, 99);\n}\n.inactive:hover {\n    background-color: darkgray;\n    border: 2px solid darkgray;\n    color: rgb(99, 99, 99);\n}\n.calculate {\n    transition: all 0.4s ease;\n}   \n.guide {\n    background-color: var(--color1);\n    min-height: 200px;\n    width:100%;\n    text-align: center;\n    padding: 15px;\n    color: white;\n    font-size: 1.25em;\n    margin: 20px 0;\n}\n/* ------- start hint effect -------- */\n@-webkit-keyframes hint{\n    to {\n      -webkit-transform: scale(1.2);\n      transform: scale(1.2);\n    }}\n@keyframes hint{\nto {\n    -webkit-transform: scale(1.2);\n    transform: scale(1.2);\n}}\n.hint{\n-webkit-animation-name: hint;\nanimation-name: hint;\n-webkit-animation-duration: 0.3s;\nanimation-duration: 0.5s;\n-webkit-animation-timing-function: linear;\nanimation-timing-function: linear;\n-webkit-animation-iteration-count: 4;\nanimation-iteration-count: 4;\n-webkit-animation-direction: alternate;\nanimation-direction: alternate;\n}\n/* ------- end hint effect -------- */\n.imgKnight {\n    position: absolute;\n    transition: all 0.3s ease-in-out;\n    z-index: 1;\n}\n.startPos {\n    border: 4px solid black;\n}\n.temp {\n    border: 4px solid rgb(0, 87, 128);\n}\n.tempLast {\n    border: 4px solid green;\n}\n.highlight {\n    background-color: cyan;\n}\n.target {\n    background-color: green;\n}"],sourceRoot:""}]);const g=d},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",o=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),o&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),o&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,o,a,r){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);o&&i[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),t.push(l))}},t}},667:n=>{n.exports=function(n,t){return t||(t={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),t.hash&&(n+=t.hash),/["'() \t\n]|(%20)/.test(n)||t.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(a," */"),i=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[t].concat(i).concat([r]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,o=0;o<t.length;o++)if(t[o].identifier===n){e=o;break}return e}function o(n,o){for(var r={},i=[],A=0;A<n.length;A++){var c=n[A],s=o.base?c[0]+o.base:c[0],l=r[s]||0,d="".concat(s," ").concat(l);r[s]=l+1;var u=e(d),C={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)t[u].references++,t[u].updater(C);else{var g=a(C,o);o.byIndex=A,t.splice(A,0,{identifier:d,updater:g,references:1})}i.push(d)}return i}function a(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,a){var r=o(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<r.length;i++){var A=e(r[i]);t[A].references--}for(var c=o(n,a),s=0;s<r.length;s++){var l=e(r[s]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}r=c}}},569:n=>{var t={};n.exports=function(n,e){var o=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var o="";e.supports&&(o+="@supports (".concat(e.supports,") {")),e.media&&(o+="@media ".concat(e.media," {"));var a=void 0!==e.layer;a&&(o+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),o+=e.css,a&&(o+="}"),e.media&&(o+="}"),e.supports&&(o+="}");var r=e.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(o,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}},662:(n,t,e)=>{n.exports=e.p+"destination.f9b726a0005af285f629.png"},42:(n,t,e)=>{n.exports=e.p+"knight.e7a49bce38ab691452c6.png"}},t={};function e(o){var a=t[o];if(void 0!==a)return a.exports;var r=t[o]={id:o,exports:{}};return n[o](r,r.exports,e),r.exports}e.m=n,e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var t=e.g.document;if(!n&&t&&(t.currentScript&&(n=t.currentScript.src),!n)){var o=t.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),e.b=document.baseURI||self.location.href,e.nc=void 0,(()=>{var n=e(379),t=e.n(n),o=e(795),a=e.n(o),r=e(569),i=e.n(r),A=e(565),c=e.n(A),s=e(216),l=e.n(s),d=e(589),u=e.n(d),C=e(28),g={};g.styleTagTransform=u(),g.setAttributes=c(),g.insert=i().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=l(),t()(C.Z,g),C.Z&&C.Z.locals&&C.Z.locals;var p=e(42);let m=!1;function f(){let n=document.querySelector(".container");n.innerHTML="";for(let t=7;t>=0;t--)for(let e=0;e<8;e++){let o=document.createElement("div");o.classList.add("cell"),t%2==0&&e%2==0||t%2!=0&&e%2!=0?o.classList.add("white"):o.classList.add("black"),0===t&&0===e&&o.classList.add("start"),o.setAttribute("data-posX",`${t}`),o.setAttribute("data-posY",`${e}`),n.appendChild(o)}}function h(){let n=document.querySelector(".calculate");n.removeEventListener("click",h),n.classList.remove("active","hint"),n.classList.add("inactive");let t=document.querySelector(".knight"),e=parseInt(t.getAttribute("data-posx")),o=parseInt(t.getAttribute("data-posy")),a=document.querySelector(".destinationFinal"),r=function(n,t){let e=function(n=8){let t=[];for(let e=0;e<n;e++){t.push([]);for(let o=0;o<n;o++)t[e].push("")}return t}(),o=[[1,2],[2,1],[2,-1],[1,-2],[-1,-2],[-2,-1],[-2,1],[-1,2]];const a=e.length;let r=n;e[r[0]][r[1]]="v";let i=!1,A=[[r]],c=[];for(;!i;){for(let n=A.length-1;n>=0;n--){let r=A[n],s=r[r.length-1];if(i)break;for(let n=o.length-1;n>=0;n--){let A=o[n],l=[s[0]+A[0],s[1]+A[1]];if(l[0]<a&&l[0]>=0&&l[1]>=0&&l[1]<a){if(l[0]===t[0]&&l[1]===t[1])return i=!0,r.push(l),e[l[0]][l[1]]="s",r;if("v"!==e[l[0]][l[1]]){e[l[0]][l[1]]="v";let n=[...r];n.push(l),c.push(n)}}}}if(A=[...c],c=[],A.length<=0){console.log("no next move found");break}}}([e,o],[parseInt(a.getAttribute("data-posx")),parseInt(a.getAttribute("data-posy"))]),i=document.createElement("img");i.classList.add("imgKnight"),i.src=p;let A=t.clientWidth,c=t.clientHeight;i.width=A,i.height=c;let s=document.querySelector(".start"),l=0,d=0,u=0;m=!0,d=r[0][1]*c,u=r[0][0]*c,i.style.transform=`translateX(${d}px) translateY(-${u}px)`,s.appendChild(i),t.classList.remove("knight"),a.classList.remove("destinationFinal"),t.classList.add("startPos"),document.querySelector(".guide").textContent=`The Knight reached the target in ${r.length-1} steps!!`;let C=1;for(let n=1;n<r.length;n++){let t=r[n];d=t[1]*c,l+=1500,g(d,u,l),l+=300,u=t[0]*c;let e=document.querySelector(`.cell[data-posx="${r[n][0]}"][data-posy="${r[n][1]}"]`);n===r.length-1?g(d,u,l,e,!0):g(d,u,l,e)}function g(n,t,e,o="",a=!1){o&&(o.textContent=C,a?o.classList.add("tempLast"):o.classList.add("temp"),C++,setTimeout((()=>{if(a?(o.classList.add("target"),o.textContent=""):o.classList.add("highlight"),a){let n=document.querySelector(".guide"),t=document.createElement("div");t.classList.add("again"),t.textContent='\n Yaay! Click the "Place Knight" button to try again.',n.appendChild(t)}}),e));let r=`translateX(${n}px) translateY(-${t}px)`;setTimeout((n=>{i.style.transform=r}),e)}}document.querySelector(".placeButton").addEventListener("click",(function(){f(),m=!1,document.querySelectorAll(".cell").forEach((n=>{n.classList.add("cellbg")})),document.querySelector(".guide").textContent="Place the knight somewhere on the board..."})),document.querySelector(".container").addEventListener("click",(function(n){if(m)return;let t=n.target;if(t.classList.contains("cellbg"))document.querySelector(".guide").textContent="Now choose a destination cell...",t.classList.add("knight"),document.querySelectorAll(".cell").forEach((n=>{n!==t&&(n.classList.remove("cellbg"),n.classList.add("destination"))}));else if(t.classList.contains("destination")){document.querySelector(".guide").textContent='Click "Calculate" to search for the shortest way to your destination!';let n=document.querySelector(".calculate");n.classList.remove("inactive"),n.classList.add("active","hint"),n.addEventListener("click",h),t.classList.add("destinationFinal"),document.querySelectorAll(".cell").forEach((n=>{n.classList.remove("destination")}))}})),document.querySelector(".calculate").addEventListener("click",h),f()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,